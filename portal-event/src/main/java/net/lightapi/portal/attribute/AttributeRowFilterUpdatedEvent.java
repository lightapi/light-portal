/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package net.lightapi.portal.attribute;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AttributeRowFilterUpdatedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4170058384786548441L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AttributeRowFilterUpdatedEvent\",\"namespace\":\"net.lightapi.portal.attribute\",\"fields\":[{\"name\":\"EventId\",\"type\":{\"type\":\"record\",\"name\":\"EventId\",\"namespace\":\"com.networknt.kafka.common\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"a unique identifier for the event\"},{\"name\":\"userId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"the user who creates the event\"},{\"name\":\"hostId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"the host which is the event is created\"},{\"name\":\"nonce\",\"type\":\"long\",\"doc\":\"the number of the transactions for the user\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"time the event is recorded\",\"default\":0},{\"name\":\"derived\",\"type\":\"boolean\",\"doc\":\"indicate if the event is derived from event processor\",\"default\":false}]}},{\"name\":\"hostId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"host id\"},{\"name\":\"attributeId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"attribute id\"},{\"name\":\"attributeValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"attribute value\"},{\"name\":\"apiId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"api id\"},{\"name\":\"apiVersion\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"api version\"},{\"name\":\"endpoint\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"endpoint\"},{\"name\":\"colName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"column name\"},{\"name\":\"operator\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"operator\"},{\"name\":\"colValue\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"column value\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AttributeRowFilterUpdatedEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AttributeRowFilterUpdatedEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AttributeRowFilterUpdatedEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AttributeRowFilterUpdatedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AttributeRowFilterUpdatedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AttributeRowFilterUpdatedEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AttributeRowFilterUpdatedEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AttributeRowFilterUpdatedEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AttributeRowFilterUpdatedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.networknt.kafka.common.EventId EventId;
  /** host id */
  private java.lang.String hostId;
  /** attribute id */
  private java.lang.String attributeId;
  /** attribute value */
  private java.lang.String attributeValue;
  /** api id */
  private java.lang.String apiId;
  /** api version */
  private java.lang.String apiVersion;
  /** endpoint */
  private java.lang.String endpoint;
  /** column name */
  private java.lang.String colName;
  /** operator */
  private java.lang.String operator;
  /** column value */
  private java.lang.String colValue;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AttributeRowFilterUpdatedEvent() {}

  /**
   * All-args constructor.
   * @param EventId The new value for EventId
   * @param hostId host id
   * @param attributeId attribute id
   * @param attributeValue attribute value
   * @param apiId api id
   * @param apiVersion api version
   * @param endpoint endpoint
   * @param colName column name
   * @param operator operator
   * @param colValue column value
   */
  public AttributeRowFilterUpdatedEvent(com.networknt.kafka.common.EventId EventId, java.lang.String hostId, java.lang.String attributeId, java.lang.String attributeValue, java.lang.String apiId, java.lang.String apiVersion, java.lang.String endpoint, java.lang.String colName, java.lang.String operator, java.lang.String colValue) {
    this.EventId = EventId;
    this.hostId = hostId;
    this.attributeId = attributeId;
    this.attributeValue = attributeValue;
    this.apiId = apiId;
    this.apiVersion = apiVersion;
    this.endpoint = endpoint;
    this.colName = colName;
    this.operator = operator;
    this.colValue = colValue;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return EventId;
    case 1: return hostId;
    case 2: return attributeId;
    case 3: return attributeValue;
    case 4: return apiId;
    case 5: return apiVersion;
    case 6: return endpoint;
    case 7: return colName;
    case 8: return operator;
    case 9: return colValue;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: EventId = (com.networknt.kafka.common.EventId)value$; break;
    case 1: hostId = value$ != null ? value$.toString() : null; break;
    case 2: attributeId = value$ != null ? value$.toString() : null; break;
    case 3: attributeValue = value$ != null ? value$.toString() : null; break;
    case 4: apiId = value$ != null ? value$.toString() : null; break;
    case 5: apiVersion = value$ != null ? value$.toString() : null; break;
    case 6: endpoint = value$ != null ? value$.toString() : null; break;
    case 7: colName = value$ != null ? value$.toString() : null; break;
    case 8: operator = value$ != null ? value$.toString() : null; break;
    case 9: colValue = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'EventId' field.
   * @return The value of the 'EventId' field.
   */
  public com.networknt.kafka.common.EventId getEventId() {
    return EventId;
  }


  /**
   * Sets the value of the 'EventId' field.
   * @param value the value to set.
   */
  public void setEventId(com.networknt.kafka.common.EventId value) {
    this.EventId = value;
  }

  /**
   * Gets the value of the 'hostId' field.
   * @return host id
   */
  public java.lang.String getHostId() {
    return hostId;
  }


  /**
   * Sets the value of the 'hostId' field.
   * host id
   * @param value the value to set.
   */
  public void setHostId(java.lang.String value) {
    this.hostId = value;
  }

  /**
   * Gets the value of the 'attributeId' field.
   * @return attribute id
   */
  public java.lang.String getAttributeId() {
    return attributeId;
  }


  /**
   * Sets the value of the 'attributeId' field.
   * attribute id
   * @param value the value to set.
   */
  public void setAttributeId(java.lang.String value) {
    this.attributeId = value;
  }

  /**
   * Gets the value of the 'attributeValue' field.
   * @return attribute value
   */
  public java.lang.String getAttributeValue() {
    return attributeValue;
  }


  /**
   * Sets the value of the 'attributeValue' field.
   * attribute value
   * @param value the value to set.
   */
  public void setAttributeValue(java.lang.String value) {
    this.attributeValue = value;
  }

  /**
   * Gets the value of the 'apiId' field.
   * @return api id
   */
  public java.lang.String getApiId() {
    return apiId;
  }


  /**
   * Sets the value of the 'apiId' field.
   * api id
   * @param value the value to set.
   */
  public void setApiId(java.lang.String value) {
    this.apiId = value;
  }

  /**
   * Gets the value of the 'apiVersion' field.
   * @return api version
   */
  public java.lang.String getApiVersion() {
    return apiVersion;
  }


  /**
   * Sets the value of the 'apiVersion' field.
   * api version
   * @param value the value to set.
   */
  public void setApiVersion(java.lang.String value) {
    this.apiVersion = value;
  }

  /**
   * Gets the value of the 'endpoint' field.
   * @return endpoint
   */
  public java.lang.String getEndpoint() {
    return endpoint;
  }


  /**
   * Sets the value of the 'endpoint' field.
   * endpoint
   * @param value the value to set.
   */
  public void setEndpoint(java.lang.String value) {
    this.endpoint = value;
  }

  /**
   * Gets the value of the 'colName' field.
   * @return column name
   */
  public java.lang.String getColName() {
    return colName;
  }


  /**
   * Sets the value of the 'colName' field.
   * column name
   * @param value the value to set.
   */
  public void setColName(java.lang.String value) {
    this.colName = value;
  }

  /**
   * Gets the value of the 'operator' field.
   * @return operator
   */
  public java.lang.String getOperator() {
    return operator;
  }


  /**
   * Sets the value of the 'operator' field.
   * operator
   * @param value the value to set.
   */
  public void setOperator(java.lang.String value) {
    this.operator = value;
  }

  /**
   * Gets the value of the 'colValue' field.
   * @return column value
   */
  public java.lang.String getColValue() {
    return colValue;
  }


  /**
   * Sets the value of the 'colValue' field.
   * column value
   * @param value the value to set.
   */
  public void setColValue(java.lang.String value) {
    this.colValue = value;
  }

  /**
   * Creates a new AttributeRowFilterUpdatedEvent RecordBuilder.
   * @return A new AttributeRowFilterUpdatedEvent RecordBuilder
   */
  public static net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder newBuilder() {
    return new net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder();
  }

  /**
   * Creates a new AttributeRowFilterUpdatedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AttributeRowFilterUpdatedEvent RecordBuilder
   */
  public static net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder newBuilder(net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder other) {
    if (other == null) {
      return new net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder();
    } else {
      return new net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder(other);
    }
  }

  /**
   * Creates a new AttributeRowFilterUpdatedEvent RecordBuilder by copying an existing AttributeRowFilterUpdatedEvent instance.
   * @param other The existing instance to copy.
   * @return A new AttributeRowFilterUpdatedEvent RecordBuilder
   */
  public static net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder newBuilder(net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent other) {
    if (other == null) {
      return new net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder();
    } else {
      return new net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for AttributeRowFilterUpdatedEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AttributeRowFilterUpdatedEvent>
    implements org.apache.avro.data.RecordBuilder<AttributeRowFilterUpdatedEvent> {

    private com.networknt.kafka.common.EventId EventId;
    private com.networknt.kafka.common.EventId.Builder EventIdBuilder;
    /** host id */
    private java.lang.String hostId;
    /** attribute id */
    private java.lang.String attributeId;
    /** attribute value */
    private java.lang.String attributeValue;
    /** api id */
    private java.lang.String apiId;
    /** api version */
    private java.lang.String apiVersion;
    /** endpoint */
    private java.lang.String endpoint;
    /** column name */
    private java.lang.String colName;
    /** operator */
    private java.lang.String operator;
    /** column value */
    private java.lang.String colValue;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.EventId)) {
        this.EventId = data().deepCopy(fields()[0].schema(), other.EventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasEventIdBuilder()) {
        this.EventIdBuilder = com.networknt.kafka.common.EventId.newBuilder(other.getEventIdBuilder());
      }
      if (isValidValue(fields()[1], other.hostId)) {
        this.hostId = data().deepCopy(fields()[1].schema(), other.hostId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.attributeId)) {
        this.attributeId = data().deepCopy(fields()[2].schema(), other.attributeId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.attributeValue)) {
        this.attributeValue = data().deepCopy(fields()[3].schema(), other.attributeValue);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.apiId)) {
        this.apiId = data().deepCopy(fields()[4].schema(), other.apiId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.apiVersion)) {
        this.apiVersion = data().deepCopy(fields()[5].schema(), other.apiVersion);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.endpoint)) {
        this.endpoint = data().deepCopy(fields()[6].schema(), other.endpoint);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.colName)) {
        this.colName = data().deepCopy(fields()[7].schema(), other.colName);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.operator)) {
        this.operator = data().deepCopy(fields()[8].schema(), other.operator);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.colValue)) {
        this.colValue = data().deepCopy(fields()[9].schema(), other.colValue);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing AttributeRowFilterUpdatedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.EventId)) {
        this.EventId = data().deepCopy(fields()[0].schema(), other.EventId);
        fieldSetFlags()[0] = true;
      }
      this.EventIdBuilder = null;
      if (isValidValue(fields()[1], other.hostId)) {
        this.hostId = data().deepCopy(fields()[1].schema(), other.hostId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.attributeId)) {
        this.attributeId = data().deepCopy(fields()[2].schema(), other.attributeId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.attributeValue)) {
        this.attributeValue = data().deepCopy(fields()[3].schema(), other.attributeValue);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.apiId)) {
        this.apiId = data().deepCopy(fields()[4].schema(), other.apiId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.apiVersion)) {
        this.apiVersion = data().deepCopy(fields()[5].schema(), other.apiVersion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.endpoint)) {
        this.endpoint = data().deepCopy(fields()[6].schema(), other.endpoint);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.colName)) {
        this.colName = data().deepCopy(fields()[7].schema(), other.colName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.operator)) {
        this.operator = data().deepCopy(fields()[8].schema(), other.operator);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.colValue)) {
        this.colValue = data().deepCopy(fields()[9].schema(), other.colValue);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'EventId' field.
      * @return The value.
      */
    public com.networknt.kafka.common.EventId getEventId() {
      return EventId;
    }


    /**
      * Sets the value of the 'EventId' field.
      * @param value The value of 'EventId'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setEventId(com.networknt.kafka.common.EventId value) {
      validate(fields()[0], value);
      this.EventIdBuilder = null;
      this.EventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'EventId' field has been set.
      * @return True if the 'EventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'EventId' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.networknt.kafka.common.EventId.Builder getEventIdBuilder() {
      if (EventIdBuilder == null) {
        if (hasEventId()) {
          setEventIdBuilder(com.networknt.kafka.common.EventId.newBuilder(EventId));
        } else {
          setEventIdBuilder(com.networknt.kafka.common.EventId.newBuilder());
        }
      }
      return EventIdBuilder;
    }

    /**
     * Sets the Builder instance for the 'EventId' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setEventIdBuilder(com.networknt.kafka.common.EventId.Builder value) {
      clearEventId();
      EventIdBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'EventId' field has an active Builder instance
     * @return True if the 'EventId' field has an active Builder instance
     */
    public boolean hasEventIdBuilder() {
      return EventIdBuilder != null;
    }

    /**
      * Clears the value of the 'EventId' field.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearEventId() {
      EventId = null;
      EventIdBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'hostId' field.
      * host id
      * @return The value.
      */
    public java.lang.String getHostId() {
      return hostId;
    }


    /**
      * Sets the value of the 'hostId' field.
      * host id
      * @param value The value of 'hostId'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setHostId(java.lang.String value) {
      validate(fields()[1], value);
      this.hostId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'hostId' field has been set.
      * host id
      * @return True if the 'hostId' field has been set, false otherwise.
      */
    public boolean hasHostId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'hostId' field.
      * host id
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearHostId() {
      hostId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributeId' field.
      * attribute id
      * @return The value.
      */
    public java.lang.String getAttributeId() {
      return attributeId;
    }


    /**
      * Sets the value of the 'attributeId' field.
      * attribute id
      * @param value The value of 'attributeId'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setAttributeId(java.lang.String value) {
      validate(fields()[2], value);
      this.attributeId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'attributeId' field has been set.
      * attribute id
      * @return True if the 'attributeId' field has been set, false otherwise.
      */
    public boolean hasAttributeId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'attributeId' field.
      * attribute id
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearAttributeId() {
      attributeId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'attributeValue' field.
      * attribute value
      * @return The value.
      */
    public java.lang.String getAttributeValue() {
      return attributeValue;
    }


    /**
      * Sets the value of the 'attributeValue' field.
      * attribute value
      * @param value The value of 'attributeValue'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setAttributeValue(java.lang.String value) {
      validate(fields()[3], value);
      this.attributeValue = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'attributeValue' field has been set.
      * attribute value
      * @return True if the 'attributeValue' field has been set, false otherwise.
      */
    public boolean hasAttributeValue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'attributeValue' field.
      * attribute value
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearAttributeValue() {
      attributeValue = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'apiId' field.
      * api id
      * @return The value.
      */
    public java.lang.String getApiId() {
      return apiId;
    }


    /**
      * Sets the value of the 'apiId' field.
      * api id
      * @param value The value of 'apiId'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setApiId(java.lang.String value) {
      validate(fields()[4], value);
      this.apiId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'apiId' field has been set.
      * api id
      * @return True if the 'apiId' field has been set, false otherwise.
      */
    public boolean hasApiId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'apiId' field.
      * api id
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearApiId() {
      apiId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'apiVersion' field.
      * api version
      * @return The value.
      */
    public java.lang.String getApiVersion() {
      return apiVersion;
    }


    /**
      * Sets the value of the 'apiVersion' field.
      * api version
      * @param value The value of 'apiVersion'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setApiVersion(java.lang.String value) {
      validate(fields()[5], value);
      this.apiVersion = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'apiVersion' field has been set.
      * api version
      * @return True if the 'apiVersion' field has been set, false otherwise.
      */
    public boolean hasApiVersion() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'apiVersion' field.
      * api version
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearApiVersion() {
      apiVersion = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'endpoint' field.
      * endpoint
      * @return The value.
      */
    public java.lang.String getEndpoint() {
      return endpoint;
    }


    /**
      * Sets the value of the 'endpoint' field.
      * endpoint
      * @param value The value of 'endpoint'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setEndpoint(java.lang.String value) {
      validate(fields()[6], value);
      this.endpoint = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'endpoint' field has been set.
      * endpoint
      * @return True if the 'endpoint' field has been set, false otherwise.
      */
    public boolean hasEndpoint() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'endpoint' field.
      * endpoint
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearEndpoint() {
      endpoint = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'colName' field.
      * column name
      * @return The value.
      */
    public java.lang.String getColName() {
      return colName;
    }


    /**
      * Sets the value of the 'colName' field.
      * column name
      * @param value The value of 'colName'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setColName(java.lang.String value) {
      validate(fields()[7], value);
      this.colName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'colName' field has been set.
      * column name
      * @return True if the 'colName' field has been set, false otherwise.
      */
    public boolean hasColName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'colName' field.
      * column name
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearColName() {
      colName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'operator' field.
      * operator
      * @return The value.
      */
    public java.lang.String getOperator() {
      return operator;
    }


    /**
      * Sets the value of the 'operator' field.
      * operator
      * @param value The value of 'operator'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setOperator(java.lang.String value) {
      validate(fields()[8], value);
      this.operator = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'operator' field has been set.
      * operator
      * @return True if the 'operator' field has been set, false otherwise.
      */
    public boolean hasOperator() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'operator' field.
      * operator
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearOperator() {
      operator = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'colValue' field.
      * column value
      * @return The value.
      */
    public java.lang.String getColValue() {
      return colValue;
    }


    /**
      * Sets the value of the 'colValue' field.
      * column value
      * @param value The value of 'colValue'.
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder setColValue(java.lang.String value) {
      validate(fields()[9], value);
      this.colValue = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'colValue' field has been set.
      * column value
      * @return True if the 'colValue' field has been set, false otherwise.
      */
    public boolean hasColValue() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'colValue' field.
      * column value
      * @return This builder.
      */
    public net.lightapi.portal.attribute.AttributeRowFilterUpdatedEvent.Builder clearColValue() {
      colValue = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AttributeRowFilterUpdatedEvent build() {
      try {
        AttributeRowFilterUpdatedEvent record = new AttributeRowFilterUpdatedEvent();
        if (EventIdBuilder != null) {
          try {
            record.EventId = this.EventIdBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("EventId"));
            throw e;
          }
        } else {
          record.EventId = fieldSetFlags()[0] ? this.EventId : (com.networknt.kafka.common.EventId) defaultValue(fields()[0]);
        }
        record.hostId = fieldSetFlags()[1] ? this.hostId : (java.lang.String) defaultValue(fields()[1]);
        record.attributeId = fieldSetFlags()[2] ? this.attributeId : (java.lang.String) defaultValue(fields()[2]);
        record.attributeValue = fieldSetFlags()[3] ? this.attributeValue : (java.lang.String) defaultValue(fields()[3]);
        record.apiId = fieldSetFlags()[4] ? this.apiId : (java.lang.String) defaultValue(fields()[4]);
        record.apiVersion = fieldSetFlags()[5] ? this.apiVersion : (java.lang.String) defaultValue(fields()[5]);
        record.endpoint = fieldSetFlags()[6] ? this.endpoint : (java.lang.String) defaultValue(fields()[6]);
        record.colName = fieldSetFlags()[7] ? this.colName : (java.lang.String) defaultValue(fields()[7]);
        record.operator = fieldSetFlags()[8] ? this.operator : (java.lang.String) defaultValue(fields()[8]);
        record.colValue = fieldSetFlags()[9] ? this.colValue : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AttributeRowFilterUpdatedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<AttributeRowFilterUpdatedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AttributeRowFilterUpdatedEvent>
    READER$ = (org.apache.avro.io.DatumReader<AttributeRowFilterUpdatedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.EventId.customEncode(out);

    out.writeString(this.hostId);

    out.writeString(this.attributeId);

    out.writeString(this.attributeValue);

    out.writeString(this.apiId);

    out.writeString(this.apiVersion);

    out.writeString(this.endpoint);

    out.writeString(this.colName);

    out.writeString(this.operator);

    out.writeString(this.colValue);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.EventId == null) {
        this.EventId = new com.networknt.kafka.common.EventId();
      }
      this.EventId.customDecode(in);

      this.hostId = in.readString();

      this.attributeId = in.readString();

      this.attributeValue = in.readString();

      this.apiId = in.readString();

      this.apiVersion = in.readString();

      this.endpoint = in.readString();

      this.colName = in.readString();

      this.operator = in.readString();

      this.colValue = in.readString();

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.EventId == null) {
            this.EventId = new com.networknt.kafka.common.EventId();
          }
          this.EventId.customDecode(in);
          break;

        case 1:
          this.hostId = in.readString();
          break;

        case 2:
          this.attributeId = in.readString();
          break;

        case 3:
          this.attributeValue = in.readString();
          break;

        case 4:
          this.apiId = in.readString();
          break;

        case 5:
          this.apiVersion = in.readString();
          break;

        case 6:
          this.endpoint = in.readString();
          break;

        case 7:
          this.colName = in.readString();
          break;

        case 8:
          this.operator = in.readString();
          break;

        case 9:
          this.colValue = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}
